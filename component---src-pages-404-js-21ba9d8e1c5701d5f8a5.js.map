{"version":3,"file":"component---src-pages-404-js-21ba9d8e1c5701d5f8a5.js","mappings":"mIAIMA,EAAa,CACjBC,WAAY,2CACZC,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,cAAe,SACfC,WAAY,UAGRC,EAAc,CAClBC,MAAO,UACPC,SAAU,QACVR,MAAO,OAGHS,EAAa,CACjBP,QAAS,OACTK,MAAO,UACPC,SAAU,OACVR,MAAO,OAGHU,EAAe,CACnBH,MAAO,UACPI,OAAQ,oBACRC,QAAS,cACTC,aAAc,OAEdC,OAAQ,aAGJC,EAAmB,CACvBf,MAAO,MACPgB,UAAW,QAGPC,EAAa,CACjBV,MAAO,UACPC,SAAU,OACVI,QAAS,eAoGX,UAhGqB,WACnB,IAAMM,GAAMC,EAAAA,EAAAA,QAAO,MAGnBC,GAA0BC,EAAAA,EAAAA,UAAS,YAA5BC,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAehBI,EAAa,SAACC,GAClB,IAAAC,EAduB,SAACD,GACxB,IAAME,EAAQC,KAAKC,MAAMJ,GAAKG,KAAKC,MAAM,IAAID,MACvCE,EAAUC,KAAKC,MAAOL,EAAQ,IAAQ,IACtCM,EAAUF,KAAKC,MAAOL,EAAQ,IAAO,GAAM,IAEjD,MAAO,CACLA,MAAAA,EACAO,MAHYH,KAAKC,MAAOL,EAAQ,IAAO,GAAK,GAAM,IAIlDM,QAAAA,EACAH,QAAAA,EAEJ,CAG2CK,CAAiBV,GAApDE,EAAKD,EAALC,MAAOO,EAAKR,EAALQ,MAAOD,EAAOP,EAAPO,QAASH,EAAOJ,EAAPI,QACzBH,GAAS,GAIXJ,GACGW,EAAQ,EAAIA,EAAQ,IAAMA,GACzB,KACCD,EAAU,EAAIA,EAAU,IAAMA,GAC/B,KACCH,EAAU,EAAIA,EAAU,IAAMA,IAIvB,IAAVH,IAAaS,EAAAA,EAAAA,UAAS,IAC5B,GAEAC,EAAAA,EAAAA,YAAU,WACM,aAAVf,IACFgB,QAAQC,KAAI,IACZH,EAAAA,EAAAA,UAAS,KAEb,GAAG,CAACd,IAoCJ,OAJAe,EAAAA,EAAAA,YAAU,WAdU,IACdG,GAjBa,SAACf,GAIlBF,EAAS,YAKLL,EAAIuB,SAASC,cAAcxB,EAAIuB,SACnC,IAAME,EAAKC,aAAY,WACrBpB,EAAWC,EACb,GAAG,KACHP,EAAIuB,QAAUE,CAChB,CAiBEE,EAdIL,EAAW,IAAIZ,KAInBY,EAASM,WAAWN,EAASO,aAAe,GACrCP,GAUT,GAAG,IAGDQ,EAAAA,cAAA,QAAMC,MAAOpD,GACXmD,EAAAA,cAAA,OAAKC,MAAO3C,GAAa,OACzB0C,EAAAA,cAAA,OAAKC,MAAOxC,GAAY,2DAGxBuC,EAAAA,cAAA,OAAKC,MAAOxC,GAAY,0BACCuC,EAAAA,cAAA,OAAKC,MAAOhC,GAAaK,IAElD0B,EAAAA,cAAA,OAAKC,MAAOlC,GACViC,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,IAAIF,MAAOvC,GAAc,YAM1C,C","sources":["webpack://resume/./src/pages/404.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Link, navigate } from \"gatsby\";\n\n// styles\nconst pageStyles = {\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n  backgroundColor: \"#000000\",\n  width: \"100vw\",\n  height: \"100vh\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n};\n\nconst titleStyles = {\n  color: \"#bef264\",\n  fontSize: \"100px\",\n  width: \"50%\",\n};\n\nconst textStyles = {\n  display: \"flex\",\n  color: \"#bef264\",\n  fontSize: \"15px\",\n  width: \"50%\",\n};\n\nconst buttonStyles = {\n  color: \"#f87171\",\n  border: \"1px solid #f87171\",\n  padding: \"0.5rem 2rem\",\n  borderRadius: \"10px\",\n  // width: \"10rem\",\n  margin: \"3rem 0rem\",\n};\n\nconst buttonTextStyles = {\n  width: \"50%\",\n  marginTop: \"3rem\",\n};\n\nconst timerStyle = {\n  color: \"#f87171\",\n  fontSize: \"15px\",\n  padding: \"0rem 0.5rem\",\n};\n\n// markup\nconst NotFoundPage = () => {\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState(\"00:00:07\");\n\n  const getTimeRemaining = (e) => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds,\n    };\n  };\n\n  const startTimer = (e) => {\n    let { total, hours, minutes, seconds } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to\n      // add '0' at the beginning of the variable\n      setTimer(\n        (hours > 9 ? hours : \"0\" + hours) +\n          \":\" +\n          (minutes > 9 ? minutes : \"0\" + minutes) +\n          \":\" +\n          (seconds > 9 ? seconds : \"0\" + seconds)\n      );\n    }\n\n    if (total === 1) navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (timer === \"00:00:00\") {\n      console.log(true);\n      navigate(\"/\");\n    }\n  }, [timer]);\n\n  const clearTimer = (e) => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next\n    setTimer(\"00:00:07\");\n\n    // If you try to remove this line the\n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // This is where you need to adjust if\n    // you entend to add more time\n    deadline.setSeconds(deadline.getSeconds() + 7);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n\n  return (\n    <main style={pageStyles}>\n      <div style={titleStyles}>404</div>\n      <div style={textStyles}>\n        The page you are looking is still under progress ......\n      </div>\n      <div style={textStyles}>\n        Let's get you back in: <div style={timerStyle}>{timer}</div>\n      </div>\n      <div style={buttonTextStyles}>\n        <Link to=\"/\" style={buttonStyles}>\n          Go Back\n        </Link>\n      </div>\n    </main>\n  );\n};\n\nexport default NotFoundPage;\n"],"names":["pageStyles","fontFamily","backgroundColor","width","height","display","justifyContent","flexDirection","alignItems","titleStyles","color","fontSize","textStyles","buttonStyles","border","padding","borderRadius","margin","buttonTextStyles","marginTop","timerStyle","Ref","useRef","_useState","useState","timer","setTimer","startTimer","e","_getTimeRemaining","total","Date","parse","seconds","Math","floor","minutes","hours","getTimeRemaining","navigate","useEffect","console","log","deadline","current","clearInterval","id","setInterval","clearTimer","setSeconds","getSeconds","React","style","Link","to"],"sourceRoot":""}