{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\nimport { linkPreviewKey, urlPreviewGeneratorLink } from '../../../constants/links';\nexport const useGetPreview = url => {\n  _s();\n  const {\n    isFetching,\n    data\n  } = useQuery(['urlPreview', url], () => axios.post(urlPreviewGeneratorLink, {\n    key: linkPreviewKey,\n    q: url\n  }), {\n    keepPreviousData: true,\n    staleTime: 120000\n  });\n  console.log({\n    data,\n    isFetching\n  });\n  return {\n    isFetching,\n    data\n  };\n};\n_s(useGetPreview, \"HmAZVyXDH38PIKV5FAiMrLq21Lc=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["axios","useQuery","linkPreviewKey","urlPreviewGeneratorLink","useGetPreview","url","_s","isFetching","data","post","key","q","keepPreviousData","staleTime","console","log"],"sources":["/Users/siddharth_gangwarcargill.com/project/resume/src/components/me/hooks/useGetPreview.js"],"sourcesContent":["import axios from 'axios'\n\nimport { useQuery } from 'react-query'\nimport {\n    linkPreviewKey,\n    urlPreviewGeneratorLink,\n} from '../../../constants/links'\n\nexport const useGetPreview = (url) => {\n    const { isFetching, data } = useQuery(\n        ['urlPreview', url],\n        () =>\n            axios.post(urlPreviewGeneratorLink, {\n                key: linkPreviewKey,\n                q: url,\n            }),\n        { keepPreviousData: true, staleTime: 120000 }\n    )\n\n    console.log({ data, isFetching })\n    return { isFetching, data }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SACIC,cAAc,EACdC,uBAAuB,QACpB,0BAA0B;AAEjC,OAAO,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAClC,MAAM;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAGP,QAAQ,CACjC,CAAC,YAAY,EAAEI,GAAG,CAAC,EACnB,MACIL,KAAK,CAACS,IAAI,CAACN,uBAAuB,EAAE;IAChCO,GAAG,EAAER,cAAc;IACnBS,CAAC,EAAEN;EACP,CAAC,CAAC,EACN;IAAEO,gBAAgB,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAO,CAAC,CAChD;EAEDC,OAAO,CAACC,GAAG,CAAC;IAAEP,IAAI;IAAED;EAAW,CAAC,CAAC;EACjC,OAAO;IAAEA,UAAU;IAAEC;EAAK,CAAC;AAC/B,CAAC;AAAAF,EAAA,CAbYF,aAAa;EAAA,QACOH,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}